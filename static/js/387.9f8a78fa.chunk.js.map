{"version":3,"file":"static/js/387.9f8a78fa.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","Pages/NavBarTabs/ContactUs.jsx"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, {useState} from \"react\";\nimport emailjs from \"@emailjs/browser\"\nimport { useClickAway } from \"@uidotdev/usehooks\";\n\nimport '../../index.css'\nimport { IoIosSend } from 'react-icons/io'\n\nconst ContactUs = (props) => {\n    const [ data, setData ] = useState({name:\"\", email:\"\", phone:\"\"})\n    const [ message, setMessage ] = useState()\n    const [ result, showResult ] = useState(false)\n    const [ validEmail, setValidEmail ] = useState(false)\n\n    const clickAway = useClickAway(() => {\n        const close = () => props.setTrigger(false);\n        close()\n      });\n    \n\n    const Result = () => {\n        return (\n            <p>Your message has been successfully sent!</p>\n        )\n    }\n\n    const EmailResponse = () => {\n        return (\n            <p>**Please enter a valid email**</p>\n        )\n    }\n\n    const messageChange = (e) => {\n        setMessage(e.target.value)\n    }\n\n    const twoCalls = (e) => {\n        onChangeValidEmail();\n        handleChange(e)\n    }\n\n    const onChangeValidEmail = () => {\n        let re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n        if (re.test(data.email)) {setValidEmail(false)}\n        else setValidEmail(true)\n    }\n\n    const handleChange = (e) => {\n        const name = e.target.name\n        const value = e.target.value\n        setData({...data, [name]:value}) \n    }\n\n    const sendMail = (e) => { //EmailJS documentation\n       // console.log(e)\n        e.preventDefault()\n        if(!validEmail) {\n            emailjs\n        .sendForm('service_0bd37pt', 'template_sasqli3', e.target, 'iauEh19za_KMIe1hP')\n        .then((result) => {\n            console.log(result.text);\n        }, (error) => {\n            console.log(error.text);\n        });\n        e.target.reset();\n        setData(\"\")\n        setMessage(\"\")\n        showResult(true)\n        }\n        else (setValidEmail(true))  \n    };\n\n    return (props.trigger) ? (\n        <div className=\"fixed overflow-auto lg:inset-x-0 lg:mx-auto w-84 lg:w-1/2 lg:h-[720px] bg-color-primary bg-opacity-70 rounded-xl shadow-2xl duration-500\" ref={clickAway} >\n        <form className=\"\" method=\"post\" onSubmit={sendMail}>\n            <div className='flex justify-end pr-5 font-mono text-2xl duration-100 text-color-text hover:text-white '>    \n                <button  onClick={() => props.setTrigger(false)}>X</button>\n            </div>\n            <h1 className=\"flex justify-center pl-10 pr-10 font-mono text-2xl text-white lg:text-4xl\">How's The <span className=\"justify-center font-mono italic underline duration-1000 text-color-text animate-bounce\">Head?</span></h1>\n            \n                \n            <div className=\"pl-6 text-lg italic text-color-text \">\n                <span className=\"pl-3 font-mono text-sm lg:text-xl\" >Name (required)</span>\n                <input className=\"flex justify-center p-1 m-1 lg:m-3 font-mono  border-2 h-[25px] lg:h-auto border-color-secondary border-solid shadow-lg w-11/12 text-md lg:text-lg focus:outline-none focus:border-color-secondary focus:border-4 bg-opacity-90 rounded-xl\" \n                type='text' name='name' id=\"\" onChange={handleChange} value={data.name} placeholder=\"Enter name\" required/>\n            </div>\n\n            <div className=\"pl-6 text-lg italic text-color-text \">\n                <span className=\"pl-3 font-mono text-sm lg:text-xl \">Email (required)</span>\n                <input className=\"flex font-mono  justify-center w-11/12 p-1 m-1 lg:m-3 h-[25px] lg:h-auto border-2 border-color-secondary border-solid shadow-lg lg:text-lg focus:outline-none focus:border-color-secondary focus:border-4 rounded-xl\" \n                type='email' name='email' id=\"\" onChange={twoCalls}  value={data.email} placeholder=\"example@gmail.com\" required/>\n                <h2 className= \"font-semibold text-center text-red-900 underline text-md \">{validEmail ? <EmailResponse/> : null }</h2>  {/*Hidden message has been sent*/}\n            </div>\n\n            <div className=\"pl-6 text-lg italic text-color-text \">\n                <span className=\"pl-3 font-mono text-sm lg:text-xl \">Phone#</span>\n                <input className=\"flex font-mono  justify-center w-11/12 p-1 m-1 lg:m-3 h-[25px] lg:h-auto text-md lg:text-lg border-2 border-color-secondary border-solid shadow-lg focus:outline-none focus:border-color-secondary focus:border-4 rounded-xl\" \n                type='phone' name='phone' id=\"\" onChange={handleChange} value={data.phone} placeholder=\"+1 (xxx)-xxx-xxxx\"/>\n            </div>\n\n            <div className=\"pl-6 text-lg italic text-color-text \">\n                <span className=\"pl-3 font-mono text-sm lg:text-xl \">Message (required)</span>\n                <textarea className=\"flex font-mono  justify-center w-11/12 p-1 m-1 lg:m-3 h-[75px] lg:h-auto text-md lg:text-lg border-2 border-color-secondary border-solid shadow-lg focus:outline-none focus:border-color-secondary focus:border-4 rounded-xl\" \n                name='message' id='' cols='30' rows='7' onChange={messageChange} value={message} placeholder=\"Enter message here...\" required/>\n            </div>\n            \n            <h2 className= \"justify-center pb-2 font-mono text-lg text-center text-white\">{result ? <Result/> : null}</h2>\n            \n            <div className=\"flex justify-center mt-4\">\n                <button \n                    className=\"w-1/5 p-2 h-[40px] text-color-text  lg:w-1/4 bg-white rounded-xl hover:text-color-text hover:bg-color-secondary flex items-center justify-center space-x-2 lg:text-xl font-mono \" type='submit'>Send\n                    <IoIosSend className=\"ml-1 text-2xl\"></IoIosSend>\n                </button>\n            </div>    \n         </form> \n         \n    </div>\n    ): \"\"\n}\n\nexport default ContactUs"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","props","_useState","useState","name","email","phone","_useState2","_slicedToArray","setData","_useState3","_useState4","message","setMessage","_useState5","_useState6","result","showResult","_useState7","_useState8","validEmail","setValidEmail","clickAway","useClickAway","setTrigger","Result","_jsx","children","EmailResponse","onChangeValidEmail","test","handleChange","e","value","_objectSpread","_defineProperty","trigger","className","ref","_jsxs","method","onSubmit","preventDefault","emailjs","then","console","log","error","reset","onClick","type","id","onChange","placeholder","required","cols","rows","IoIosSend"],"sourceRoot":""}
{"version":3,"file":"static/js/234.4c4024e3.chunk.js","mappings":"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","sources":["Pages/NavBarTabs/SearchBar.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nimport { PRODUCTS } from '../../ProductsStore';\nimport { useNavigate } from 'react-router-dom';\n\nimport { BsSearch } from 'react-icons/bs'\nimport { AiOutlineCloseCircle } from 'react-icons/ai'\n\nconst SearchBar = (props) => {\n    // console.log(props.trigger)\n    const navigate = useNavigate()\n    const [ filteredData, setFilteredData ] = useState([])\n    const [ wordEntered, setWordEntered ] = useState('')\n    const [focusedIndex, setFocusedIndex] = useState(-1);\n    \n\n    //Filter through input data for result\n    const handleFilter = (e) => {\n        const searchWord = e.target.value;\n        setWordEntered(searchWord)\n        const newFilter = PRODUCTS.filter((value) => {\n            return value.productName.toLowerCase().includes(searchWord.toLowerCase())\n        })\n        if(searchWord === '') {\n            setFilteredData([])\n        }\n        else {\n            setFilteredData(newFilter)\n        }\n    }\n\n    const clearInput = () => {\n        setFilteredData([])\n        setWordEntered('')\n    }\n    //Function for arrows on keyboard\n    const handleKeyDown = (e) => {\n        if (e.key === 'ArrowDown') {\n            e.preventDefault();\n            setFocusedIndex((prevIndex) =>\n                prevIndex < filteredData.length - 1 ? prevIndex + 1 : prevIndex\n            );\n        } else if (e.key === 'ArrowUp') {\n            e.preventDefault();\n            setFocusedIndex((prevIndex) => (prevIndex > 0 ? prevIndex - 1 : prevIndex));\n        } else if (e.key === 'Enter') {\n            e.preventDefault();\n            if (focusedIndex >= 0 && focusedIndex < filteredData.length) {\n                handleSearchItemClick(filteredData[focusedIndex]);\n            }\n        }\n    };\n  \n    const handleSearchItemClick = async (value) => {\n        await navigate(`/products/${value.webId}`);\n        props.setTrigger(false);\n    };\n    \n    // Prevent click from bubbling to outer div\n    const handleInputClick = (e) => {\n        e.stopPropagation(); \n    };\n \n  return (props.trigger) ? (\n    <div className='fixed lg:mt-0 inset-x-0 w-screen overflow-auto bg-gray-700 bg-opacity-75 lg:top-0 h-[300px] lg:h-screen rounded-xl' \n        onClick={() => props.setTrigger(false)}>\n        <div className='flex justify-end text-black duration-100 lg:pr-16 lg:pt-16 lg:text-5xl ' >    \n            <button \n            className='cursor-pointer hover:text-white'\n            onClick={() => props.setTrigger(false)}>X</button>\n        </div>\n       \n        <div className='flex sm:mt-[5%] h-[50px] lg:h-auto mt-10 justify-center text-[18px]' onClick={handleInputClick} >\n            <input \n                type='text' \n                onKeyDown={handleKeyDown}\n                placeholder='Enter a product name...'\n                className='bg-white text-[8px] lg:text-lg border-0 mb-0 lg:mb-0 p-4 lg:p-8 h-[20px] lg:h-[30px] lg:w-[500px] w-[150px] justify-center'\n                onChange={handleFilter}\n                value={wordEntered}\n                autoFocus>\n            </input>\n            <div className='lg:h-[64px] h-[32px] w-[40px] lg:w-[50px] lg:text-5xl bg-white place-items-center items-center justify-center flex pr-3'>\n                {filteredData.length === 0 ? <BsSearch className='text-md lg:text-3xl' /> : <AiOutlineCloseCircle className='cursor-pointer' onClick={clearInput}/>}\n                \n            </div>\n        </div>\n        {filteredData.length !== 0 && (\n        <div className='flex justify-center lg:pt-5'> \n            <div \n            className='lg:mt-[5px] lg:w-[300px] w-[150px] lg:h-[150px] bg-white overflow-hidden overflow-y-auto shadow-md'\n            onKeyDown={handleKeyDown}>\n                { filteredData.slice(0,3).map((value, key) => {\n                    return( \n                    <div \n                        key={key}\n                        className={`flex w-full h-[35px] p-2 content-center hover:bg-gray-100 text-black cursor-pointer ${\n                            focusedIndex === key ? 'bg-gray-200' : ''\n                        }`}\n                        onClick={ () => handleSearchItemClick(value)\n                         }>\n                            <p className='ml-[10px] text-xs lg:text-xl'>{value.productName}</p>       \n                    </div>)\n                })}\n            </div>\n        </div>\n        )}\n    </div>\n \n  ):null\n}\n\nexport default SearchBar"],"names":["props","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","filteredData","setFilteredData","_useState3","_useState4","wordEntered","setWordEntered","_useState5","_useState6","focusedIndex","setFocusedIndex","handleKeyDown","e","key","preventDefault","prevIndex","length","handleSearchItemClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","wrap","_context","prev","next","concat","webId","setTrigger","stop","_x","apply","arguments","trigger","_jsxs","className","onClick","children","_jsx","stopPropagation","type","onKeyDown","placeholder","onChange","searchWord","target","newFilter","PRODUCTS","filter","productName","toLowerCase","includes","autoFocus","BsSearch","AiOutlineCloseCircle","slice","map"],"sourceRoot":""}
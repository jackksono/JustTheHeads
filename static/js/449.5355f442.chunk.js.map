{"version":3,"file":"static/js/449.5355f442.chunk.js","mappings":"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","sources":["Pages/Ratings/DisplayRating.jsx","Pages/Ratings/RatingInput.jsx","Products/IndividualProduct.jsx"],"sourcesContent":["import React from 'react'\n\nconst DisplayRating = ({ averageRating }) => {\n  const percentage = 20;\n\n  // Calculate the class for each star based on the percentage\n  const star1Class = `text-2xl  ${percentage >= 20 && percentage < 40 ? 'text-yellow-400' : 'text-gray-300'}`;\n  const star2Class = `text-2xl  ${percentage >= 40 && percentage < 60 ? 'text-yellow-400' : 'text-gray-300'}`;\n  const star3Class = `text-2xl  ${percentage >= 60 && percentage < 80 ? 'text-yellow-400' : 'text-gray-300'}`;\n  const star4Class = `text-2xl  ${percentage >= 80 && percentage < 100 ? 'text-yellow-400' : 'text-gray-300'}`;\n  const star5Class = `text-2xl  ${percentage === 100 ? 'text-yellow-400' : 'text-gray-300'}`;\n\n  return (\n    <div className=\"ratings\">\n      <div className=\"ratings-stars\">\n        <span className={star1Class}>★</span>\n        <span className={star2Class}>★</span>\n        <span className={star3Class}>★</span>\n        <span className={star4Class}>★</span>\n        <span className={star5Class}>★</span>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayRating;","import React, { useState } from 'react';\n\nconst RatingInput = ({ maxRating, onRatingSubmit, setAddRating }) => {\n  const [hoveredRating, setHoveredRating] = useState(null);\n  const [selectedRatings, setSelectedRatings] = useState(Array.from({ length: maxRating }, () => false));\n\n  const handleMouseEnter = (rating) => {\n    setHoveredRating(rating);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredRating(null);\n  };\n\n  const handleRatingClick = (rating) => {\n    const newSelectedRatings = selectedRatings.map((_, index) =>\n      index < rating ? true : false\n    );\n    setSelectedRatings(newSelectedRatings);\n    setAddRating(rating);\n  };\n\n  return (\n    <div>\n      {Array.from({ length: maxRating }).map((_, index) => {\n        const rating = index + 1;\n        const isSelected = selectedRatings[index]; // Check if this rating is selected\n  \n        return (\n          <span\n            key={rating}\n            className={`text-2xl cursor-pointer ${\n              (isSelected || rating <= hoveredRating) ? 'text-yellow-400' : 'text-gray-400'\n            }`}\n            onMouseEnter={() => handleMouseEnter(rating)}\n            onMouseLeave={handleMouseLeave}\n            onClick={() => handleRatingClick(rating)}\n          >\n            ★\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default RatingInput;\n","import React, { useContext, lazy, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PRODUCTS } from '../ProductsStore'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { ImLink } from 'react-icons/im'\nimport { ShopContext } from '../Context/ShopContext'\nimport { UserContext } from \"../Context/UserContext\";\nimport { FacebookShareButton, \n        FacebookIcon, \n        TwitterShareButton, \n        TwitterIcon, \n        FacebookMessengerShareButton, \n        FacebookMessengerIcon, \n        WhatsappShareButton, \n        WhatsappIcon, \n        RedditShareButton, \n        RedditIcon } from 'react-share'\n\nimport noGMO from '../Images/SiteImages/NoGMO.png'\nimport ketoFriendly from '../Images/SiteImages/KetoFriendly.png'\nimport bakedNotFried from '../Images/SiteImages/BakedNotFried.png'\n\nimport DisplayRating from '../Pages/Ratings/DisplayRating';\nimport RatingInput from '../Pages/Ratings/RatingInput';\n\nconst MobileIndividualComponent = lazy(()=>  (import('../Pages/MobileVsNon/MobileIndividualProduct')))\nconst DesktopIndividualComponent = lazy(() => (import('../Pages/MobileVsNon/DesktopIndividualProduct')))\n\nconst IndividualProduct = () => {\n    const [ stockAmount, setStockAmount ] = useState(null)\n    const [ reviews, setReviews ] = useState([]);\n    const [ addRating, setAddRating ] = useState(0);\n    const [ averageRating, setAverageRating ] = useState(null)\n    const [ newComment, setNewComment ] = useState('')\n    const [ addNewComment, setAddNewComment ] = useState(false);\n    const [ successfullyCopied, setSuccessfullyCopied ] = useState(false);\n    const [ newCommentOpen, setNewCommentOpen ] = useState(false);\n    const [ selectedRatings, setSelectedRatings] = useState([false, false, false, false, false]); \n\n\n    const { webId }  = useParams()\n    const cart = useContext(ShopContext)\n    const product = PRODUCTS.find((product) => product.webId === webId)\n    const { productImage, productName, id, description, ingredients } = product\n    const productQuantity = cart.getProductQuantity(id)\n\n    const { loggedIn, successfulLoginData } = useContext(UserContext)\n\n    const navigate = useNavigate()\n\n    const shareUrl = \"https://justtheheads.com/products/\" + webId\n    const isMobile = window.innerWidth <= 640\n\n    const submitComment = async (submitComment) => {\n        try {\n          await axios.post(`http://localhost:4000/comments/api/products/${webId}/add-comment`, {\n            comment: newComment, \n            name: successfulLoginData.name,\n            rating: addRating\n          })\n          setAddNewComment(false);\n\n          axios.get(`http://localhost:4000/comments/api/products/${webId}/comments`)\n            .then((response) => {\n              setReviews(response.data);\n            })\n            .catch((error) => {\n              console.error('Error fetching comments:', error);\n            });\n        } catch (error) {\n          console.error('Error adding comment:', error);\n        }\n      };\n      \n    useEffect(() => {\n        axios.get(`http://localhost:4000/comments/api/products/${webId}/comments`)\n          .then((response) => {\n            console.log(response)\n            const newSelectedRatings = response.data.map((review) => review.rating);\n            const totalRating = newSelectedRatings.reduce((acc, rating) => acc + rating, 0);\n            const averageRating = totalRating / newSelectedRatings.length;\n            setSelectedRatings(newSelectedRatings);\n            setAverageRating(averageRating);\n            setStockAmount(response.data.inStock)\n            setReviews(response.data);\n          })\n          .catch((error) => {\n            console.error('Error fetching comments:', error);\n          });\n      }, [webId])\n\n      const renderStarRating = (rating) => {\n        const stars = [];\n      \n        for (let i = 1; i <= 5; i++) {\n          if (i <= rating) {\n            stars.push(\n              <span\n                key={i}\n                style={{ color: 'yellow' }} \n              >\n                &#9733;\n              </span>\n            );\n          } else {\n            stars.push(<span key={i}>&#9734;</span>);\n          }\n        }\n        return stars;\n      };\n      \n      console.log(stockAmount)\n\n  return (\n    <div className='relative w-screen pt-32 bg-center bg-cover max-h-max sm:pt-44 bg-color-background bg-allProducts bg-blend-lighten'>\n        <div className=''>\n            <button className='flex pl-4 text-xs font-bold text-color-text lg:pl-8 lg:text-xl font-CabinSketch hover:underline hover:decoration-2 hover:underline-offset-4 hover:decoration-color-secondary hover:text-white'\n                onClick={() =>navigate('/all-products')}\n            >Back\n            </button>\n            <h1 className='pt-5 text-3xl font-extrabold text-center lg:pt-0 text-color-text lg:text-5xl font-CabinSketch'>{productName} \n                <span><DisplayRating averageRating={30}></DisplayRating></span>\n            </h1>\n            <div className='flex justify-center lg:px-28 lg:py-5 sm:justify-start'>\n                <img \n                    src={productImage}\n                    alt='productImage'\n                    className='sm:h-[450px] sm:w-[337.5px] h-full w-11/12 sm:mx-0 sm:mt-0 mx-2 mt-12'\n                    loading='lazy'>\n                </img>\n                <div>\n                    {isMobile ? (\n                       null\n                    ) : <DesktopIndividualComponent description={description} productQuantity={productQuantity} id={id} cart={cart} ></DesktopIndividualComponent>}\n                </div>\n            </div>\n\n            <div className='pt-5'>\n                {isMobile ? (\n                    <MobileIndividualComponent description={description} productQuantity={productQuantity} id={id} cart={cart} ></MobileIndividualComponent>\n                ) : null }\n            </div>\n\n            <div className='flex flex-row sm:flex-col justify-center space-x-8 sm:space-x-0 sm:space-y-2 sm:absolute sm:top-[15%] pt-10 sm:right-[7.5%]'>\n                <div className='flex flex-col items-center justify-center text-center'>\n                    <img src={noGMO} alt='NoGMO' className='w-20 h-20 sm:w-28 sm:h-28 grayscale' loading='lazy'></img>\n                    <p className='pt-3 text-sm font-bold text-color-text font-CabinSketch'>Made with</p>\n                    <p className='text-sm font-bold text-color-text font-CabinSketch'>Real Ingredients</p>\n                </div>\n                \n                <div className='flex flex-col items-center justify-center text-center'>\n                    <img src={ketoFriendly} alt='NoGMO' className='w-20 h-20 sm:w-28 sm:h-28' loading='lazy'></img>\n                    <p className='pt-3 text-sm font-bold text-color-text font-CabinSketch'>Low Carbs</p>\n                    <p className='text-sm font-bold text-color-text font-CabinSketch'>No Fillers</p>\n                </div>\n\n                <div className='flex flex-col items-center justify-center text-center'>\n                    <img src={bakedNotFried} alt='NoGMO' className='w-20 h-20 sm:w-28 sm:h-28 grayscale' loading='lazy'></img>\n                    <p className='pt-3 text-sm font-bold text-color-text font-CabinSketch'>Never</p>\n                    <p className='text-sm font-bold text-color-text font-CabinSketch'>Deep Fried!</p>\n                </div>\n            </div>\n\n            <div className='flex sm:mt-[-5%] sm:flex-none sm:transform sm:-translate-x-1/2 sm:absolute sm:pr-28 sm:left-1/2'>\n                <div className='flex items-center space-y-2'>\n                \n                    <h1 className='flex px-10 font-bold sm:p-5 sm:px-5 text-color-text font-CabinSketch'>Share Product:</h1>\n                    \n                    <div className='space-x-8 place-content-center'>\n                        <FacebookShareButton url={shareUrl} quote={'Check out these Just The Heads Products!'} hashtag='#JustTheHeads'>\n                            <FacebookIcon size={40} round={true} className='hover:opacity-80' />\n                        </FacebookShareButton>\n                        <TwitterShareButton url={shareUrl}>\n                            <TwitterIcon size={40} round={true} className='hover:opacity-80'/>\n                        </TwitterShareButton>\n                        <WhatsappShareButton url={shareUrl}>\n                            <WhatsappIcon size={40} round={true} className='hover:opacity-80'/>\n                        </WhatsappShareButton>\n                        <FacebookMessengerShareButton url={shareUrl} appId='657091659851318'> {/*not testable using localhost*/}\n                            <FacebookMessengerIcon size={40} round={true} className='hover:opacity-80'/>\n                        </FacebookMessengerShareButton>\n                        <RedditShareButton url={shareUrl}>\n                            <RedditIcon size={40} round={true} className='hover:opacity-80'/>\n                        </RedditShareButton>\n                        \n                    \n                        <button onClick={() => { \n                                navigator.clipboard.writeText(shareUrl);\n                                setSuccessfullyCopied(true)}}\n                                className='w-10 h-10 text-xs bg-black border border-black rounded-full hover:opacity-80'>\n                            <ImLink className='mb-4 ml-2 text-2xl text-white'/>\n                        </button>\n                  \n                        \n                        <div>\n                            {successfullyCopied ? (\n                            <div class=\"flex px-0 text-sm text-gray-800 rounded-lg bg-gray-50 text-center justify-center \" role=\"alert\">\n                            <span class=\"font-medium\">Successfully Copied to Clipboard!</span> \n                        </div>\n                    ) : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n            \n            \n            \n            <div className='flex justify-center h-auto px-5 py-2'>\n                <div className='sm:w-3/4 sm:h-[100px] bg-color-secondary border rounded-lg border-black shadow-[0px_3px_15px_rgba(0,0,0,0.2)]'>\n                    <h1 className='px-2 text-lg font-bold text-color-text font-CabinSketch'>Ingredients:</h1>\n                    <p className='p-2 font-medium text-color-text font-CabinSketch'>{ingredients}</p>\n                </div>\n            </div>\n            <div className='p-5 font-CabinSketch min-w-max'>\n                <h2 className='text-lg font-bold '>\n                    Customer Reviews: {loggedIn ? null : <span>(Please <button className=' text-color-secondary hover:text-white' onClick={() => navigate('/login')}> sign in </button> to leave a review)</span>}\n                </h2>\n                <ul className='w-11/12 bg-white border border-black rounded-md h-min'>\n                {Array.isArray(reviews) && reviews.length > 0 ? (\n                    reviews.map((review) => (\n                        <div className=\"flex w-full border border-gray-200\" key={review._id}>\n                        <div className=\"flex w-full px-3 py-2\">\n                            <div>\n                            {review.comment}\n                            </div>\n                            <div className=\"flex items-center ml-auto\">\n                            {renderStarRating(review.rating)}\n                            <span className=\"ml-2 text-sm text-gray-500\">{new Date(review.date).toLocaleDateString('en-US')}</span>\n                            <span className=\"ml-2 text-sm\">{review.name}</span>\n                            </div>\n                        </div>\n                        </div>\n                    ))\n                    ) : (\n                    <li>There are no reviews for this product.</li>\n                    )}      \n            </ul>\n            {loggedIn ? (\n                <div>\n                    {newCommentOpen ? (\n                        null\n                    ) :\n                    <button \n                        className='cursor-pointer hover:text-white'\n                        type=\"button\" \n                        onClick={() => {\n                            setAddNewComment(true);\n                            setNewCommentOpen(true)}}>\n                            Add Product Review\n                     </button>}\n                \n                {addNewComment ? (\n                    <form onSubmit={(e) => {\n                        e.preventDefault();\n                        setNewComment(e.target.comment.value);\n                        submitComment(newComment);\n                        }}\n                        onChange={(e) => setNewComment(e.target.value)} >\n                    <textarea\n                        className='w-11/12 mt-2 rounded-lg h-1/6'\n                        type=\"text\"\n                        name=\"comment\"\n                        placeholder=\"Add a comment\"\n                    />\n                    <RatingInput maxRating={5} setAddRating={setAddRating}></RatingInput>\n                    <button className='flex hover:text-white' type=\"submit\">Submit</button>\n                </form>\n                ): null}\n                </div>\n            ) : null}\n            \n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default IndividualProduct"],"names":["_ref","averageRating","star1Class","concat","star2Class","star3Class","star4Class","star5Class","_jsx","className","children","_jsxs","maxRating","setAddRating","onRatingSubmit","_useState","useState","_useState2","_slicedToArray","hoveredRating","setHoveredRating","_useState3","Array","from","length","_useState4","selectedRatings","setSelectedRatings","handleMouseLeave","map","_","index","rating","isSelected","onMouseEnter","handleMouseEnter","onMouseLeave","onClick","newSelectedRatings","handleRatingClick","MobileIndividualComponent","lazy","DesktopIndividualComponent","stockAmount","setStockAmount","reviews","setReviews","_useState5","_useState6","addRating","_useState7","_useState8","setAverageRating","_useState9","_useState10","newComment","setNewComment","_useState11","_useState12","addNewComment","setAddNewComment","_useState13","_useState14","successfullyCopied","setSuccessfullyCopied","_useState15","_useState16","newCommentOpen","setNewCommentOpen","_useState17","_useState18","webId","useParams","cart","useContext","ShopContext","product","PRODUCTS","find","productImage","productName","id","description","ingredients","productQuantity","getProductQuantity","_useContext","UserContext","loggedIn","successfulLoginData","navigate","useNavigate","shareUrl","isMobile","window","innerWidth","submitComment","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","post","comment","name","get","then","response","data","catch","error","console","t0","stop","_x","apply","arguments","useEffect","log","review","reduce","acc","inStock","renderStarRating","stars","i","push","style","color","DisplayRating","src","alt","loading","ketoFriendly","FacebookShareButton","url","quote","hashtag","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","FacebookMessengerShareButton","appId","FacebookMessengerIcon","RedditShareButton","RedditIcon","navigator","clipboard","writeText","ImLink","class","role","isArray","Date","date","toLocaleDateString","_id","type","onSubmit","e","preventDefault","target","value","onChange","placeholder","RatingInput"],"sourceRoot":""}
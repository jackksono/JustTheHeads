{"version":3,"file":"static/js/449.9e72b0b9.chunk.js","mappings":"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","sources":["Pages/Ratings/DisplayRating.jsx","Pages/Ratings/RatingInput.jsx","Products/IndividualProduct.jsx"],"sourcesContent":["import React from 'react'\n\nconst DisplayRating = ({ rating, maxRating }) => {\n    const percentage = (rating / maxRating) * 100;\n  \n    return (\n      <div className=\"ratings\">\n        <div className=\"ratings-stars\">\n          <span\n            className={`text-yellow-400 text-2xl ${percentage >= 20 ? 'fill-yellow' : ''}`}\n          >\n            ★\n          </span>\n          <span\n            className={`text-yellow-400 text-2xl ${percentage >= 40 ? 'fill-yellow' : ''}`}\n          >\n            ★\n          </span>\n          <span\n            className={`text-yellow-400 text-2xl ${percentage >= 60 ? 'fill-yellow' : ''}`}\n          >\n            ★\n          </span>\n          <span\n            className={`text-yellow-400 text-2xl ${percentage >= 80 ? 'fill-yellow' : ''}`}\n          >\n            ★\n          </span>\n          <span\n            className={`text-yellow-400 text-2xl ${percentage === 100 ? 'fill-yellow' : ''}`}\n          >\n            ★\n          </span>\n        </div>\n      </div>\n    );\n  }\n\nexport default DisplayRating","import React, { useState } from 'react';\n\nconst RatingInput = ({ maxRating, onRatingSubmit, setAddRating }) => {\n  const [hoveredRating, setHoveredRating] = useState(null);\n  const [selectedRatings, setSelectedRatings] = useState(Array.from({ length: maxRating }, () => false));\n\n  const handleMouseEnter = (rating) => {\n    setHoveredRating(rating);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredRating(null);\n  };\n\n  const handleRatingClick = (rating) => {\n    const newSelectedRatings = selectedRatings.map((_, index) =>\n      index < rating ? true : false\n    );\n    setSelectedRatings(newSelectedRatings);\n    setAddRating(rating);\n  };\n\n  return (\n    <div>\n      {Array.from({ length: maxRating }).map((_, index) => {\n        const rating = index + 1;\n        const isSelected = selectedRatings[index]; // Check if this rating is selected\n  \n        return (\n          <span\n            key={rating}\n            className={`text-2xl cursor-pointer ${\n              (isSelected || rating <= hoveredRating) ? 'text-yellow-400' : 'text-gray-400'\n            }`}\n            onMouseEnter={() => handleMouseEnter(rating)}\n            onMouseLeave={handleMouseLeave}\n            onClick={() => handleRatingClick(rating)}\n          >\n            ★\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default RatingInput;\n","import React, { useContext, lazy, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PRODUCTS } from '../ProductsStore'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { ImLink } from 'react-icons/im'\nimport { ShopContext } from '../Context/ShopContext'\nimport { UserContext } from \"../Context/UserContext\";\nimport { FacebookShareButton, \n        FacebookIcon, \n        TwitterShareButton, \n        TwitterIcon, \n        FacebookMessengerShareButton, \n        FacebookMessengerIcon, \n        WhatsappShareButton, \n        WhatsappIcon, \n        RedditShareButton, \n        RedditIcon } from 'react-share'\n\nimport noGMO from '../Images/SiteImages/NoGMO.png'\nimport ketoFriendly from '../Images/SiteImages/KetoFriendly.png'\nimport bakedNotFried from '../Images/SiteImages/BakedNotFried.png'\n\nimport DisplayRating from '../Pages/Ratings/DisplayRating';\nimport RatingInput from '../Pages/Ratings/RatingInput';\n\nconst MobileIndividualComponent = lazy(()=>  (import('../Pages/MobileVsNon/MobileIndividualProduct')))\nconst DesktopIndividualComponent = lazy(() => (import('../Pages/MobileVsNon/DesktopIndividualProduct')))\n\nconst IndividualProduct = () => {\n    const [ stockAmount, setStockAmount ] = useState(null)\n    const [ reviews, setReviews ] = useState([]);\n    const [ addRating, setAddRating ] = useState(0);\n    const [ averageRating, setAverageRating ] = useState(null)\n    const [ newComment, setNewComment ] = useState('')\n    const [ addNewComment, setAddNewComment ] = useState(false);\n    const [ successfullyCopied, setSuccessfullyCopied ] = useState(false);\n    const [ newCommentOpen, setNewCommentOpen ] = useState(false);\n    const [ selectedRatings, setSelectedRatings] = useState([false, false, false, false, false]); \n\n\n    const { webId }  = useParams()\n    const cart = useContext(ShopContext)\n    const product = PRODUCTS.find((product) => product.webId === webId)\n    const { productImage, productName, id, description, ingredients } = product\n    const productQuantity = cart.getProductQuantity(id)\n\n    const { loggedIn, successfulLoginData } = useContext(UserContext)\n\n    const navigate = useNavigate()\n\n    const shareUrl = \"https://justtheheads.com/products/\" + webId\n    const isMobile = window.innerWidth <= 640\n\n    const submitComment = async (submitComment) => {\n        try {\n          await axios.post(`http://localhost:4000/comments/api/products/${webId}/add-comment`, {\n            comment: newComment, \n            name: successfulLoginData.name,\n            rating: addRating\n          })\n          setAddNewComment(false);\n\n          axios.get(`http://localhost:4000/comments/api/products/${webId}/comments`)\n            .then((response) => {\n              setReviews(response.data);\n            })\n            .catch((error) => {\n              console.error('Error fetching comments:', error);\n            });\n        } catch (error) {\n          console.error('Error adding comment:', error);\n        }\n      };\n      \n    useEffect(() => {\n        axios.get(`http://localhost:4000/comments/api/products/${webId}/comments`)\n          .then((response) => {\n            console.log(response)\n            const newSelectedRatings = response.data.map((review) => review.rating);\n            const totalRating = newSelectedRatings.reduce((acc, rating) => acc + rating, 0);\n            const averageRating = totalRating / newSelectedRatings.length;\n            setSelectedRatings(newSelectedRatings);\n            setAverageRating(averageRating);\n            setReviews(response.data);\n          })\n          .catch((error) => {\n            console.error('Error fetching comments:', error);\n          });\n      }, [webId])\n\n      const renderStarRating = (rating) => {\n        const stars = [];\n      \n        for (let i = 1; i <= 5; i++) {\n          if (i <= rating) {\n            stars.push(\n              <span\n                key={i}\n                style={{ color: 'yellow' }} \n              >\n                &#9733;\n              </span>\n            );\n          } else {\n            stars.push(<span key={i}>&#9734;</span>);\n          }\n        }\n        return stars;\n      };\n      \n      \n\n  return (\n    <div className='relative w-screen pt-32 bg-center bg-cover max-h-max sm:pt-20 bg-color-background bg-allProducts bg-blend-lighten'>\n        <div className=''>\n            <button className='flex pl-4 text-xs font-bold text-color-text lg:pl-8 lg:text-xl font-CabinSketch hover:underline hover:decoration-2 hover:underline-offset-4 hover:decoration-color-secondary hover:text-white'\n                onClick={() =>navigate('/all-products')}\n            >Back\n            </button>\n            <h1 className='pt-5 text-3xl font-extrabold text-center lg:pt-0 text-color-text lg:text-5xl font-CabinSketch'>{productName} \n                <span><DisplayRating averageRating={averageRating}></DisplayRating></span>\n            </h1>\n            <div className='flex justify-center lg:px-28 lg:py-5 sm:justify-start'>\n                <img \n                    src={productImage}\n                    alt='productImage'\n                    className='sm:h-[450px] sm:w-[337.5px] h-full w-11/12 sm:mx-0 sm:mt-0 mx-2 mt-12'\n                    loading='lazy'>\n                </img>\n                <div>\n                    {isMobile ? (\n                       null\n                    ) : <DesktopIndividualComponent description={description} productQuantity={productQuantity} id={id} cart={cart} ></DesktopIndividualComponent>}\n                </div>\n            </div>\n\n            <div className='pt-5'>\n                {isMobile ? (\n                    <MobileIndividualComponent description={description} productQuantity={productQuantity} id={id} cart={cart} ></MobileIndividualComponent>\n                ) : null }\n            </div>\n\n            <div className='flex flex-row sm:flex-col justify-center space-x-8 sm:space-x-0 sm:space-y-2 sm:absolute sm:top-[5%] pt-10 sm:right-[7.5%]'>\n                <div className='flex flex-col items-center justify-center text-center'>\n                    <img src={noGMO} alt='NoGMO' className='w-20 h-20 sm:w-28 sm:h-28 grayscale' loading='lazy'></img>\n                    <p className='pt-3 text-sm font-bold text-color-text font-CabinSketch'>Made with</p>\n                    <p className='text-sm font-bold text-color-text font-CabinSketch'>Real Ingredients</p>\n                </div>\n                \n                <div className='flex flex-col items-center justify-center text-center'>\n                    <img src={ketoFriendly} alt='NoGMO' className='w-20 h-20 sm:w-28 sm:h-28' loading='lazy'></img>\n                    <p className='pt-3 text-sm font-bold text-color-text font-CabinSketch'>Low Carbs</p>\n                    <p className='text-sm font-bold text-color-text font-CabinSketch'>No Fillers</p>\n                </div>\n\n                <div className='flex flex-col items-center justify-center text-center'>\n                    <img src={bakedNotFried} alt='NoGMO' className='w-20 h-20 sm:w-28 sm:h-28 grayscale' loading='lazy'></img>\n                    <p className='pt-3 text-sm font-bold text-color-text font-CabinSketch'>Never</p>\n                    <p className='text-sm font-bold text-color-text font-CabinSketch'>Deep Fried!</p>\n                </div>\n            </div>\n\n            <div className='flex sm:mt-[-5%] sm:flex-none sm:transform sm:-translate-x-1/2 sm:absolute sm:pr-28 sm:left-1/2'>\n                <div className='flex items-center space-y-2'>\n                \n                    <h1 className='flex px-10 font-bold sm:p-5 sm:px-5 text-color-text font-CabinSketch'>Share Product:</h1>\n                    \n                    <div className='space-x-8 place-content-center'>\n                        <FacebookShareButton url={shareUrl} quote={'Check out these Just The Heads Products!'} hashtag='#JustTheHeads'>\n                            <FacebookIcon size={40} round={true} className='hover:opacity-80' />\n                        </FacebookShareButton>\n                        <TwitterShareButton url={shareUrl}>\n                            <TwitterIcon size={40} round={true} className='hover:opacity-80'/>\n                        </TwitterShareButton>\n                        <WhatsappShareButton url={shareUrl}>\n                            <WhatsappIcon size={40} round={true} className='hover:opacity-80'/>\n                        </WhatsappShareButton>\n                        <FacebookMessengerShareButton url={shareUrl} appId='657091659851318'> {/*not testable using localhost*/}\n                            <FacebookMessengerIcon size={40} round={true} className='hover:opacity-80'/>\n                        </FacebookMessengerShareButton>\n                        <RedditShareButton url={shareUrl}>\n                            <RedditIcon size={40} round={true} className='hover:opacity-80'/>\n                        </RedditShareButton>\n                        \n                    \n                        <button onClick={() => { \n                                navigator.clipboard.writeText(shareUrl);\n                                setSuccessfullyCopied(true)}}\n                                className='w-10 h-10 text-xs bg-black border border-black rounded-full hover:opacity-80'>\n                            <ImLink className='mb-4 ml-2 text-2xl text-white'/>\n                        </button>\n                  \n                        \n                        <div>\n                            {successfullyCopied ? (\n                            <div class=\"flex px-0 text-sm text-gray-800 rounded-lg bg-gray-50 text-center justify-center \" role=\"alert\">\n                            <span class=\"font-medium\">Successfully Copied to Clipboard!</span> \n                        </div>\n                    ) : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n            \n            \n            \n            <div className='flex justify-center h-auto px-5 py-2'>\n                <div className='sm:w-3/4 sm:h-[100px] bg-color-secondary border rounded-lg border-black shadow-[0px_3px_15px_rgba(0,0,0,0.2)]'>\n                    <h1 className='px-2 text-lg font-bold text-color-text font-CabinSketch'>Ingredients:</h1>\n                    <p className='p-2 font-medium text-color-text font-CabinSketch'>{ingredients}</p>\n                </div>\n            </div>\n            <div className='p-5 font-CabinSketch min-w-max'>\n                <h2 className='text-lg font-bold '>\n                    Customer Reviews: {loggedIn ? null : <span>(Please <button className=' text-color-secondary hover:text-white' onClick={() => navigate('/login')}> sign in </button> to leave a review)</span>}\n                </h2>\n                <ul className='w-11/12 bg-white border border-black rounded-md h-min'>\n                {Array.isArray(reviews) && reviews.length > 0 ? (\n                    reviews.map((review) => (\n                        <div className=\"flex w-full border border-gray-200\" key={review._id}>\n                        <div className=\"flex w-full px-3 py-2\">\n                            <div>\n                            {review.comment}\n                            </div>\n                            <div className=\"flex items-center ml-auto\">\n                            {renderStarRating(review.rating)}\n                            <span className=\"ml-2 text-sm text-gray-500\">{new Date(review.date).toLocaleDateString('en-US')}</span>\n                            <span className=\"ml-2 text-sm\">{review.name}</span>\n                            </div>\n                        </div>\n                        </div>\n                    ))\n                    ) : (\n                    <li>There are no reviews for this product.</li>\n                    )}      \n            </ul>\n            {loggedIn ? (\n                <div>\n                    {newCommentOpen ? (\n                        null\n                    ) :\n                    <button \n                        className='cursor-pointer hover:text-white'\n                        type=\"button\" \n                        onClick={() => {\n                            setAddNewComment(true);\n                            setNewCommentOpen(true)}}>\n                            Add Product Review\n                     </button>}\n                \n                {addNewComment ? (\n                    <form onSubmit={(e) => {\n                        e.preventDefault();\n                        setNewComment(e.target.comment.value);\n                        submitComment(newComment);\n                        }}\n                        onChange={(e) => setNewComment(e.target.value)} >\n                    <textarea\n                        className='w-11/12 mt-2 rounded-lg h-1/6'\n                        type=\"text\"\n                        name=\"comment\"\n                        placeholder=\"Add a comment\"\n                    />\n                    <RatingInput maxRating={5} setAddRating={setAddRating}></RatingInput>\n                    <button className='flex hover:text-white' type=\"submit\">Submit</button>\n                </form>\n                ): null}\n                </div>\n            ) : null}\n            \n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default IndividualProduct"],"names":["_ref","percentage","rating","maxRating","_jsx","className","children","_jsxs","concat","setAddRating","onRatingSubmit","_useState","useState","_useState2","_slicedToArray","hoveredRating","setHoveredRating","_useState3","Array","from","length","_useState4","selectedRatings","setSelectedRatings","handleMouseLeave","map","_","index","isSelected","onMouseEnter","handleMouseEnter","onMouseLeave","onClick","newSelectedRatings","handleRatingClick","MobileIndividualComponent","lazy","DesktopIndividualComponent","reviews","setReviews","_useState5","_useState6","addRating","_useState7","_useState8","averageRating","setAverageRating","_useState9","_useState10","newComment","setNewComment","_useState11","_useState12","addNewComment","setAddNewComment","_useState13","_useState14","successfullyCopied","setSuccessfullyCopied","_useState15","_useState16","newCommentOpen","setNewCommentOpen","_useState17","_useState18","webId","useParams","cart","useContext","ShopContext","product","PRODUCTS","find","productImage","productName","id","description","ingredients","productQuantity","getProductQuantity","_useContext","UserContext","loggedIn","successfulLoginData","navigate","useNavigate","shareUrl","isMobile","window","innerWidth","submitComment","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","post","comment","name","get","then","response","data","catch","error","console","t0","stop","_x","apply","arguments","useEffect","log","review","reduce","acc","renderStarRating","stars","i","push","style","color","DisplayRating","src","alt","loading","ketoFriendly","FacebookShareButton","url","quote","hashtag","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","FacebookMessengerShareButton","appId","FacebookMessengerIcon","RedditShareButton","RedditIcon","navigator","clipboard","writeText","ImLink","class","role","isArray","Date","date","toLocaleDateString","_id","type","onSubmit","e","preventDefault","target","value","onChange","placeholder","RatingInput"],"sourceRoot":""}